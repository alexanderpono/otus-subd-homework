Павел, здравствуйте!
Привожу исправления по замечаниям к запросам.
blog_db
#1. blog_db - Топ 3 статьи с наибольшим количеством лайков по каждому пользователю
замечание: 
У вас для пользователя user2 отображается 4 статьи, а не три. Даже не знаю ошибка или нет :) Если вот прямо три статьи надо вывести, то ошибка. Надо другую функцию ранжирования. С другой стороны они попали, потому что лайков одинаковое количество по нулям.

ответ: предлагаю считать вывод четырех статей, из которых у двух статей совпадает количество лайков, приемлемым.


#2. blog_db - насколько количество лайков по каждой статье отличается от среднего количества лайков по всем статьям

замечания:
1) а почему left outer join ? почему не inner join? p.author_user_id и l.post_id - not null
2) Мы же здесь выборку не по авторам делаем, авторов можно просто дополнительно вывести. И необходимость join blog_db.`like` не понятна.
3) #Я бы хотел видеть в результате просто цифру на сколько количество лайков больше или меньше от среднего значения. 
#Среднее у вас примерно 1.19. То есть, если в процентах: 5 лайков - 5*100/1.19 = 420%, 1 лайк - 1*100/1.19 = 84%, 
#2 лайка - 2*100/1.19 = 168% 

ответы:
1) спасибо, заменил на inner join
2) да, спасибо, я вообще убрал авторов из запроса, а также убрал join blog_db.like
3) подправил запрос, чтобы было отклонение от среднего с процентами 

привожу доработанный запрос:
with posts_like_count as (
select DISTINCT 
	p.id as post_id,
	p.title as post_title,
	(
		select count(1) 
		from blog_db.`like` l2
		where l2.post_id = p.id
	) as like_count
from blog_db.post p
)
select 
	*, 
	(select sum(like_count) from posts_like_count) as sum1,
	(select count(1) from posts_like_count) as cnt1,
	(select sum1 / cnt1) as middle1,
	(select concat(format(like_count / middle1 * 100, 'N'), '%')) as percent_to_middle1
from posts_like_count
;


#3. blog_db - 3 наиболее активных автора (написали наибольшее число статей)
замечания
select 
	u.id, 
	u.name,
	(select count(1) from blog_db.post p where p.author_user_id = u.id) as post_count
from blog_db.`user` u
limit 3
;
